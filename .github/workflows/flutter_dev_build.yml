# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter Build

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Flutter action
        uses: subosito/flutter-action@v2.14.0
        with:
          channel: stable

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Extract version and build number
        id: extract_version
        run: |
          version=$(grep 'version:' pubspec.yaml | sed 's/version: //' | cut -d "+" -f 1)
          build_number=$(grep 'version:' pubspec.yaml | sed 's/version: //' | cut -d "+" -f 2)
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${build_number}" >> $GITHUB_ENV

      - name: Increment build number and update pubspec.yaml
        run: |
          new_build_number=$((${BUILD_NUMBER} + 1))
          sed -i "s/version: ${VERSION}+${BUILD_NUMBER}/version: ${VERSION}+${new_build_number}/" pubspec.yaml
          echo "NEW_BUILD_NUMBER=${new_build_number}" >> $GITHUB_ENV

      - name: Commit updated pubspec.yaml
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Increment build number to ${NEW_BUILD_NUMBER}"
          git push

      - name: Build App
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update -y
            sudo apt-get install -y ninja-build libgtk-3-dev
            flutter build linux --release
            cd build/linux/x64/release/bundle
            zip -r ../linux-release.zip ./*
            cd
          else
            flutter build windows --release
            powershell Compress-Archive -Path "build/windows/runner/x64/Release/*" -DestinationPath "build/windows/runner/x64/windows-release.zip"
          fi

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ matrix.os == 'ubuntu-latest' && 'linux-release.zip' || 'windows-release.zip' }}
          path: |
            ${{ matrix.os == 'ubuntu-latest' && 'build/linux/x64/release/linux-release.zip' || 'build/windows/runner/x64/windows-release.zip' }}

      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a v${{ env.VERSION }}+${{ env.NEW_BUILD_NUMBER }}-alpha -m "Release v${{ env.VERSION }}+${{ env.NEW_BUILD_NUMBER }}-alpha"
          git push origin v${{ env.VERSION }}+${{ env.NEW_BUILD_NUMBER }}-alpha

      - name: GH Release
        uses: softprops/action-gh-release@v2.0.5
        with:
          files: |
            ${{ matrix.os == 'ubuntu-latest' && 'build/linux/x64/release/linux-release.zip' || 'build/windows/windows-release.zip' }}
          tag_name: v${{ env.VERSION }}+${{ env.NEW_BUILD_NUMBER }}-alpha
          make_latest: false
