# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter Build

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

permissions:
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      build_number: ${{ steps.extract_version.outputs.build_number }}
      new_build_number: ${{ steps.increment_build.outputs.new_build_number }}
      changes_made: ${{ steps.commit_changes.outputs.changes_made }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version and build number
        id: extract_version
        run: |
          version_line=$(grep 'version:' pubspec.yaml)
          version=$(echo $version_line | sed 's/version: //' | cut -d "+" -f 1)
          build_number=$(echo $version_line | sed 's/version: //' | cut -d "+" -f 2)
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "build_number=${build_number}" >> $GITHUB_OUTPUT
          echo "Current version: ${version}+${build_number}"
      
      - name: Increment build number and update pubspec.yaml
        id: increment_build
        run: |
          new_build_number=$((build_number + 1))
          sed -i "s/version: ${version}+${build_number}/version: ${version}+${new_build_number}/" pubspec.yaml
          echo "new_build_number=${new_build_number}" >> $GITHUB_OUTPUT
          echo "Updated version: ${version}+${new_build_number}"
          echo "pubspec.yaml content after update:"
          cat pubspec.yaml

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --exit-code pubspec.yaml; then
            echo "No changes detected in pubspec.yaml"
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in pubspec.yaml"
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit updated pubspec.yaml
        id: commit_changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pubspec.yaml
          if [[ "${{ steps.check_changes.outputs.changes_detected }}" == "true" ]]; then
            git commit -m "Increment build number to ${{ steps.increment_build.outputs.new_build_number }}"
            git push
            echo "changes_made=true" >> $GITHUB_OUTPUT
            echo "Changes committed and pushed"
          else
            echo "No changes to commit"
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: prepare
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Flutter action
        uses: subosito/flutter-action@v2.14.0
        with:
          channel: stable

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          flutter build linux --release
          cd build/linux/x64/release/bundle
          zip -r ../linux-release.zip ./*
          cd -

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          flutter build windows --release
          powershell Compress-Archive -Path "build/windows/x64/runner/Release/*" -DestinationPath "build/windows/x64/runner/windows-release.zip"

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ matrix.os == 'ubuntu-latest' && 'linux-release.zip' || 'windows-release.zip' }}
          path: |
            ${{ matrix.os == 'ubuntu-latest' && 'build/linux/x64/release/linux-release.zip' || 'build/windows/x64/runner/windows-release.zip' }}

  release:
    needs: [prepare, build]
    if: needs.prepare.outputs.changes_made == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a v${{ needs.prepare.outputs.version }}+${{ needs.prepare.outputs.new_build_number }}-alpha -m "Release v${{ needs.prepare.outputs.version }}+${{ needs.prepare.outputs.new_build_number }}-alpha"
          git push origin v${{ needs.prepare.outputs.version }}+${{ needs.prepare.outputs.new_build_number }}-alpha

      - name: GH Release
        uses: softprops/action-gh-release@v2.0.5
        with:
          files: |
            linux-release.zip
            windows-release.zip
          tag_name: v${{ needs.prepare.outputs.version }}+${{ needs.prepare.outputs.new_build_number }}-alpha
          make_latest: false